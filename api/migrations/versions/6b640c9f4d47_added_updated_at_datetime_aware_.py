"""added updated at datetime aware timezones

Revision ID: 6b640c9f4d47
Revises: 7f85ca55c653
Create Date: 2025-09-08 19:28:37.730716

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6b640c9f4d47'
down_revision: Union[str, None] = '7f85ca55c653'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - fixed with timezone conversion ###
    tables_and_columns = [
        ("album", "created_at"),
        ("album_release", "created_at"),
        ("album_type", "created_at"),
        ("appuser", "created_at"),
        ("artist", "created_at"),
        ("collection", "created_at"),
        ("collection_track", "added_at"),
        ("discogs_oauth_temp", "created_at"),
        ("file_scan_cache", "scanned_at"),
        ("genre", "created_at"),
        ("playback_history", "played_at"),
        ("playback_queue", "added_at"),
        ("playback_session", "updated_at"),
        ("refresh_token", "created_at"),
        ("tag", "created_at"),
        ("track_version", "created_at"),
        ("track_version_extra_artist", "created_at"),
        ("track_version_genre_bridge", "created_at"),
        ("track_version_tag_bridge", "created_at"),
    ]

    for table, col in tables_and_columns:
        with op.batch_alter_table(table, schema=None) as batch_op:
            batch_op.alter_column(
                col,
                existing_type=postgresql.TIMESTAMP(),
                type_=sa.DateTime(timezone=True),
                existing_server_default=sa.text("now()"),
                postgresql_using=f"{col} AT TIME ZONE 'UTC'",
                nullable=True,
            )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - reverting back to naive ###
    tables_and_columns = [
        ("track_version_tag_bridge", "created_at"),
        ("track_version_genre_bridge", "created_at"),
        ("track_version_extra_artist", "created_at"),
        ("track_version", "created_at"),
        ("tag", "created_at"),
        ("refresh_token", "created_at"),
        ("playback_session", "updated_at"),
        ("playback_queue", "added_at"),
        ("playback_history", "played_at"),
        ("genre", "created_at"),
        ("file_scan_cache", "scanned_at"),
        ("discogs_oauth_temp", "created_at"),
        ("collection_track", "added_at"),
        ("collection", "created_at"),
        ("artist", "created_at"),
        ("appuser", "created_at"),
        ("album_type", "created_at"),
        ("album_release", "created_at"),
        ("album", "created_at"),
    ]

    for table, col in tables_and_columns:
        with op.batch_alter_table(table, schema=None) as batch_op:
            batch_op.alter_column(
                col,
                existing_type=sa.DateTime(timezone=True),
                type_=postgresql.TIMESTAMP(),
                existing_server_default=sa.text("now()"),
                nullable=False,
            )
    # ### end Alembic commands ###
