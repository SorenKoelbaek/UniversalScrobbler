"""revamped collection_model

Revision ID: 10f1f470c812
Revises: 839f31d58ad4
Create Date: 2025-09-08 23:09:31.502080

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '10f1f470c812'
down_revision: Union[str, None] = '839f31d58ad4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('library_track',
    sa.Column('library_track_uuid', sa.Uuid(), nullable=False),
    sa.Column('track_version_uuid', sa.Uuid(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('quality', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['track_version_uuid'], ['track_version.track_version_uuid'], ),
    sa.PrimaryKeyConstraint('library_track_uuid'),
    sa.UniqueConstraint('track_version_uuid')
    )
    with op.batch_alter_table('library_track', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_library_track_track_version_uuid'), ['track_version_uuid'], unique=False)

    with op.batch_alter_table('collection_track', schema=None) as batch_op:
        batch_op.drop_index('ix_collection_track_collection_uuid')
        batch_op.drop_index('ix_collection_track_track_version_uuid')


    # --- truncate file_scan_cache ---
    op.execute("TRUNCATE file_scan_cache")

    op.drop_table('collection_track')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collection_track',
    sa.Column('collection_track_uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('collection_uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('track_version_uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quality', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('format', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('added_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('duration_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['collection_uuid'], ['collection.collection_uuid'], name='collection_track_collection_uuid_fkey'),
    sa.ForeignKeyConstraint(['track_version_uuid'], ['track_version.track_version_uuid'], name='collection_track_track_version_uuid_fkey'),
    sa.PrimaryKeyConstraint('collection_track_uuid', name='collection_track_pkey'),
    sa.UniqueConstraint('collection_uuid', 'track_version_uuid', 'format', name='collection_track_collection_uuid_track_version_uuid_format_key')
    )
    with op.batch_alter_table('collection_track', schema=None) as batch_op:
        batch_op.create_index('ix_collection_track_track_version_uuid', ['track_version_uuid'], unique=False)
        batch_op.create_index('ix_collection_track_collection_uuid', ['collection_uuid'], unique=False)

    with op.batch_alter_table('library_track', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_library_track_track_version_uuid'))

    op.drop_table('library_track')
    # ### end Alembic commands ###
