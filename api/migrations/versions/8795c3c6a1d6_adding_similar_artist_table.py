"""adding similar artist table

Revision ID: 8795c3c6a1d6
Revises: ab8379bed441
Create Date: 2025-09-11 20:36:18.431245

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '8795c3c6a1d6'
down_revision: Union[str, None] = 'ab8379bed441'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('similar_artist_bridge',
    sa.Column('similar_artist_bridge_uuid', sa.Uuid(), nullable=False),
    sa.Column('reference_artist_uuid', sa.Uuid(), nullable=False),
    sa.Column('artist_uuid', sa.Uuid(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.Column('reference_mbid', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['artist_uuid'], ['artist.artist_uuid'], ),
    sa.ForeignKeyConstraint(['reference_artist_uuid'], ['artist.artist_uuid'], ),
    sa.PrimaryKeyConstraint('similar_artist_bridge_uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('similar_artist_bridge')
    # ### end Alembic commands ###
