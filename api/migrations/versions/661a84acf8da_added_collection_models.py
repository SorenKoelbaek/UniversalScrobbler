"""added collection models

Revision ID: 661a84acf8da
Revises: 8fd2f7dd01bd
Create Date: 2025-03-29 11:53:55.447493

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '661a84acf8da'
down_revision: Union[str, None] = '8fd2f7dd01bd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('album_release',
    sa.Column('album_release_uuid', sa.Uuid(), nullable=False),
    sa.Column('album_uuid', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('discogs_release_id', sa.Integer(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('quality', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['album_uuid'], ['album.album_uuid'], ),
    sa.PrimaryKeyConstraint('album_release_uuid')
    )
    op.create_table('album_release_artist_bridge',
    sa.Column('album_release_uuid', sa.Uuid(), nullable=False),
    sa.Column('artist_uuid', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['album_release_uuid'], ['album_release.album_release_uuid'], ),
    sa.ForeignKeyConstraint(['artist_uuid'], ['artist.artist_uuid'], ),
    sa.PrimaryKeyConstraint('album_release_uuid', 'artist_uuid')
    )
    op.create_table('collection_album_release_bridge',
    sa.Column('collection_uuid', sa.Uuid(), nullable=False),
    sa.Column('album_release_uuid', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['album_release_uuid'], ['album_release.album_release_uuid'], ),
    sa.ForeignKeyConstraint(['collection_uuid'], ['collection.collection_uuid'], ),
    sa.PrimaryKeyConstraint('collection_uuid', 'album_release_uuid')
    )
    op.create_table('track',
    sa.Column('track_uuid', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('album_uuid', sa.Uuid(), nullable=False),
    sa.Column('album_release_uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('quality', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['album_release_uuid'], ['album_release.album_release_uuid'], ),
    sa.ForeignKeyConstraint(['album_uuid'], ['album.album_uuid'], ),
    sa.PrimaryKeyConstraint('track_uuid')
    )
    op.add_column('album', sa.Column('release_date', sa.DateTime(), nullable=True))
    op.add_column('album', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('album', sa.Column('quality', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.drop_column('album', 'discogs_release_id')
    op.add_column('artist', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('artist', sa.Column('quality', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('collection', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('playback_history', sa.Column('album_release_uuid', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'playback_history', 'track', ['track_uuid'], ['track_uuid'])
    op.create_foreign_key(None, 'playback_history', 'album_release', ['album_release_uuid'], ['album_release_uuid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'playback_history', type_='foreignkey')
    op.drop_constraint(None, 'playback_history', type_='foreignkey')
    op.create_foreign_key('playback_history_track_uuid_fkey', 'playback_history', 'discogs_track', ['track_uuid'], ['track_uuid'])
    op.drop_column('playback_history', 'album_release_uuid')
    op.drop_column('collection', 'created_at')
    op.drop_column('artist', 'quality')
    op.drop_column('artist', 'created_at')
    op.add_column('album', sa.Column('discogs_release_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('album', 'quality')
    op.drop_column('album', 'created_at')
    op.drop_column('album', 'release_date')
    op.create_table('discogs_track',
    sa.Column('track_uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('album_uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['album_uuid'], ['album.album_uuid'], name='discogs_track_album_uuid_fkey'),
    sa.PrimaryKeyConstraint('track_uuid', name='discogs_track_pkey')
    )
    op.drop_table('track')
    op.drop_table('collection_album_release_bridge')
    op.drop_table('album_release_artist_bridge')
    op.drop_table('album_release')
    # ### end Alembic commands ###
