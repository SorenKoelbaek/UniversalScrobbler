"""added collection models

Revision ID: e8fe71f14574
Revises: 2c968b2a61c1
Create Date: 2025-03-30 12:59:19.549605

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e8fe71f14574'
down_revision: Union[str, None] = '2c968b2a61c1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('track_album_bridge',
    sa.Column('track_uuid', sa.Uuid(), nullable=False),
    sa.Column('album_uuid', sa.Uuid(), nullable=False),
    sa.Column('track_number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['album_uuid'], ['album.album_uuid'], ),
    sa.ForeignKeyConstraint(['track_uuid'], ['track.track_uuid'], ),
    sa.PrimaryKeyConstraint('track_uuid', 'album_uuid')
    )
    op.create_table('track_artist_bridge',
    sa.Column('track_uuid', sa.Uuid(), nullable=False),
    sa.Column('artist_uuid', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['artist_uuid'], ['artist.artist_uuid'], ),
    sa.ForeignKeyConstraint(['track_uuid'], ['track.track_uuid'], ),
    sa.PrimaryKeyConstraint('track_uuid', 'artist_uuid')
    )
    op.create_table('track_version',
    sa.Column('track_version_uuid', sa.Uuid(), nullable=False),
    sa.Column('track_uuid', sa.Uuid(), nullable=False),
    sa.Column('duration', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('quality', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['track_uuid'], ['track.track_uuid'], ),
    sa.PrimaryKeyConstraint('track_version_uuid')
    )
    op.create_table('track_version_album_release_bridge',
    sa.Column('track_version_uuid', sa.Uuid(), nullable=False),
    sa.Column('album_release_uuid', sa.Uuid(), nullable=False),
    sa.Column('track_number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['album_release_uuid'], ['album_release.album_release_uuid'], ),
    sa.ForeignKeyConstraint(['track_version_uuid'], ['track_version.track_version_uuid'], ),
    sa.PrimaryKeyConstraint('track_version_uuid', 'album_release_uuid')
    )
    op.create_table('track_version_extra_artist',
    sa.Column('track_version_uuid', sa.Uuid(), nullable=False),
    sa.Column('artist_uuid', sa.Uuid(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['artist_uuid'], ['artist.artist_uuid'], ),
    sa.ForeignKeyConstraint(['track_version_uuid'], ['track_version.track_version_uuid'], ),
    sa.PrimaryKeyConstraint('track_version_uuid', 'artist_uuid')
    )
    op.drop_constraint('track_album_release_uuid_fkey', 'track', type_='foreignkey')
    op.drop_constraint('track_album_uuid_fkey', 'track', type_='foreignkey')
    op.drop_column('track', 'quality')
    op.drop_column('track', 'album_uuid')
    op.drop_column('track', 'album_release_uuid')
    op.drop_column('track', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('track', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('track', sa.Column('album_release_uuid', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('track', sa.Column('album_uuid', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('track', sa.Column('quality', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('track_album_uuid_fkey', 'track', 'album', ['album_uuid'], ['album_uuid'])
    op.create_foreign_key('track_album_release_uuid_fkey', 'track', 'album_release', ['album_release_uuid'], ['album_release_uuid'])
    op.drop_table('track_version_extra_artist')
    op.drop_table('track_version_album_release_bridge')
    op.drop_table('track_version')
    op.drop_table('track_artist_bridge')
    op.drop_table('track_album_bridge')
    # ### end Alembic commands ###
